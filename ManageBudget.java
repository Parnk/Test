
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class ManageBudget extends javax.swing.JFrame {

    public static String userName;
    private int mouseX, mouseY;
    String currentMonth = new SimpleDateFormat("MMM").format(Calendar.getInstance().getTime());
    /**
     * Creates new form ManageBudget
     */
    public ManageBudget() {
        initComponents();
        Show_Spending_In__JTable();
    }

    //Display Data in JTable: 
   
    //Fill ArrayList with Data
    public ArrayList<Spending> getSpendingList()
    {
        
        ArrayList<Spending> spendingList  = new ArrayList<Spending>();
            
        PreparedStatement ps;
        ResultSet rs;
            
        String query = "select spendingID, Budget, spending.MonthYear, spending.CategoryName, SpendingAmount, ModificationDate " 
                + "from spending  join budget " 
                + "on spending.budgetid = budget.budgetid "
                + "where userid = ? " 
                + "and MONTH(spending.MonthYear) = MONTH(CURRENT_DATE()) " 
                + "AND YEAR(spending.MonthYear) = YEAR(CURRENT_DATE()) ";
        try {
            
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1, getUserId(userName));
            
            rs = ps.executeQuery();
            Spending spending;
            
            while(rs.next()) {
                
                spending = new Spending(rs.getInt("SpendingID"), 
                        rs.getFloat("Budget"), rs.getDate("MonthYear"), 
                        rs.getString("CategoryName"), rs.getFloat("SpendingAmount"), 
                        rs.getDate("ModificationDate"));
                spendingList.add(spending);
            }
                
            } catch (SQLException ex) {
                Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            
             return spendingList;
    }
    
    //Populate the JTable
     public void Show_Spending_In__JTable()
    {
        ArrayList<Spending> list = getSpendingList();
        DefaultTableModel model = (DefaultTableModel)jTable_Spending.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[5];
        
        
        
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getSpendingID();
            row[1] = list.get(i).getCategoryName();
            row[2] = list.get(i).getBudget();
            row[3] = list.get(i).getSpendingAmount();
            row[4] = list.get(i).getModificationDate();
            model.addRow(row);
        }
    
    }
    
     //Show Data in Inputs
      public void ShowItem(int index)
    {
            jTextField_SpendingID.setText(Integer.toString(getSpendingList().get(index).getSpendingID()));
            jTextField_Spending.setText(Float.toString(getSpendingList().get(index).getSpendingAmount()));
            if (getSpendingList().get(index).getModificationDate() != null)
                jDateChooser_Date.setDate(getSpendingList().get(index).getModificationDate());
            
        
    }
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Spending = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_SpendingID = new javax.swing.JTextField();
        jTextField_Spending = new javax.swing.JTextField();
        jDateChooser_Date = new com.toedter.calendar.JDateChooser();
        jButton_ADD_MODIFY = new javax.swing.JButton();
        jButton_DELETE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(37, 157, 190));

        jTable_Spending.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SpendingID", "Category", "Budget", "Spending", "Date"
            }
        ));
        jTable_Spending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SpendingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Spending);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("SpendingID:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("    Date:");

        jTextField_SpendingID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_SpendingID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SpendingIDActionPerformed(evt);
            }
        });

        jTextField_Spending.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_Spending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SpendingActionPerformed(evt);
            }
        });

        jButton_ADD_MODIFY.setBackground(new java.awt.Color(255, 222, 89));
        jButton_ADD_MODIFY.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_ADD_MODIFY.setText("Add/Modify");
        jButton_ADD_MODIFY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ADD_MODIFYActionPerformed(evt);
            }
        });

        jButton_DELETE.setBackground(new java.awt.Color(234, 66, 83));
        jButton_DELETE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_DELETE.setText("Delete");
        jButton_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DELETEActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("   Spending:");

        jLabel1.setBackground(new java.awt.Color(97, 44, 9));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("ADD BUDGET");
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(97, 44, 9));
        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel7.setText("Calculator");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(37, 37, 37))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_ADD_MODIFY)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDateChooser_Date, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addComponent(jTextField_Spending)
                        .addComponent(jTextField_SpendingID))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_SpendingID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Spending, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jDateChooser_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton_ADD_MODIFY, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X ");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(currentMonth);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 706, Short.MAX_VALUE)
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabelClose)
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClose)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_SpendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SpendingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SpendingActionPerformed

    private void jTextField_SpendingIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SpendingIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SpendingIDActionPerformed

    private void jButton_ADD_MODIFYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ADD_MODIFYActionPerformed
        if(checkInputs() && !jTextField_SpendingID.getText().equals("")){
            PreparedStatement ps;
            String updateQuery = "UPDATE spending SET SpendingAmount = ?, ModificationDate = ? WHERE SpendingID = ?";
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            /*4*/String date = sdf.format(jDateChooser_Date.getDate());
            
            try {
                ps = MyConnection.getConnection().prepareStatement(updateQuery);

                
                ps.setFloat(1, Float.parseFloat(jTextField_Spending.getText()));
                ps.setString(2, date);
                ps.setInt(3, Integer.parseInt(jTextField_SpendingID.getText()));
                
                Spending_Over_80();
                int rowsAffected = ps.executeUpdate();
               
                Show_Spending_In__JTable();
                
                if (rowsAffected > 0)
                    JOptionPane.showMessageDialog(null, "Spending Changes Are Successfully Made");
                else 
                    JOptionPane.showMessageDialog(null, "No Changes Are Made. Check Spending ID properly");

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        }else{
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty Or Wrong");
        }

    }//GEN-LAST:event_jButton_ADD_MODIFYActionPerformed

    private void jButton_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DELETEActionPerformed
        if(!jTextField_SpendingID.getText().equals("")) {

            try {
                PreparedStatement ps;
                String deleteQuery = "Update spending set SpendingAmount = null, ModificationDate = null WHERE SpendingID = ?";

                ps = MyConnection.getConnection().prepareStatement(deleteQuery);

                ps.setInt(1, Integer.parseInt(jTextField_SpendingID.getText()));

                ps.executeUpdate();
                Show_Spending_In__JTable();

                JOptionPane.showMessageDialog(null, "Spending Data is Deleted");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
                JOptionPane.showMessageDialog(null, "Spending Data Not Deleted");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Spending Data Not Deleted : No Id To Delete");
        }
    }//GEN-LAST:event_jButton_DELETEActionPerformed

    private void jTable_SpendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SpendingMouseClicked
         int index = jTable_Spending.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_jTable_SpendingMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        AddBudget ab = new AddBudget();
        ab.setVisible(true);
        ab.pack();
        ab.setLocationRelativeTo(null);
        ab.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       

    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        Calculator cal = new Calculator();
        cal.setVisible(true);
        cal.pack();
        cal.setLocationRelativeTo(null);
        cal.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
      
    }//GEN-LAST:event_jLabel1MouseMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
     
    }//GEN-LAST:event_formMouseDragged

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        setLocation(getX() + evt.getX() - mouseX, getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

                                          
 
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBudget().setVisible(true);
            }
        });
    }
    
    
    //Check User Inputs
    public boolean checkInputs(){
        if(
              jTextField_Spending.getText() == null
           || jDateChooser_Date.getDate() == null
          ){
            return false;
        }
        else{
            
            SimpleDateFormat smf = new SimpleDateFormat("MM");
            String date1 = smf.format(jDateChooser_Date.getDate());
           
            Date currentMonth = new Date();
            String date2 = smf.format(currentMonth);
            
            if (!date1.equals(date2)) {
                JOptionPane.showMessageDialog(null, "Spending Date should be of current month");
                return false;
            }
            try{
                Float.parseFloat(jTextField_Spending.getText());
                return true;
            }catch(Exception ex)
            {
                return false;
            }
        }
    }
    
    //get userid
    public int getUserId(String username){
        PreparedStatement ps;
        ResultSet rs;
        int userid = -1;
        String query = "Select userid from user where username = ?";
        
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, username);
            
            rs = ps.executeQuery();
            if(rs.next()){
            userid = rs.getInt("USERID");
}
            
        } catch (SQLException ex) {
            Logger.getLogger(HOME_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        return userid;
    }
    
    
    //Check SpendingAmount for 80 % exceed
    public void Spending_Over_80() {
        PreparedStatement ps;
        ResultSet rs;
        float budget;
        String query = "Select budget "
                        + "from spending join budget " 
                        + "on spending.budgetid = budget.budgetid "
                        + "where spendingid = ?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1, Integer.parseInt(jTextField_SpendingID.getText()));
            rs = ps.executeQuery();
            
            if(rs.next()) {
                budget = rs.getFloat("Budget");
                
                if (Float.parseFloat(jTextField_Spending.getText()) >= (80 * budget) / 100.0) 
                    JOptionPane.showMessageDialog(null, "Spending has exceeded 80%!", "Spending Exceeded", 2);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageBudget.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ADD_MODIFY;
    private javax.swing.JButton jButton_DELETE;
    private com.toedter.calendar.JDateChooser jDateChooser_Date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Spending;
    private javax.swing.JTextField jTextField_Spending;
    private javax.swing.JTextField jTextField_SpendingID;
    // End of variables declaration//GEN-END:variables
}
