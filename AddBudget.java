
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.Border;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class AddBudget extends javax.swing.JFrame {

     private int mouseX, mouseY;
    public static String userName;
   
    
    String currentMonth = new SimpleDateFormat("MMM").format(Calendar.getInstance().getTime());
    /** 
     * Creates new form AddBudget
     */
    
    public AddBudget() {
        initComponents();
        Show_Budget_In__JTable();
        Show_Categories_In_ComboBox();
    }
    
    
    //Display Data in JTable: 
   
    //Fill ArrayList with Data
    public ArrayList<Budget> getBudgetList()
    {
        
        ArrayList<Budget> budgetList  = new ArrayList<Budget>();
            
        PreparedStatement ps;
        ResultSet rs;
            
        String query = "SELECT * FROM budget where userid = ? and MONTH(MonthYear) = MONTH(CURRENT_DATE())"
                        + "AND YEAR(MonthYear) = YEAR(CURRENT_DATE())";
        try {
            
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1, getUserId(userName));
            
            rs = ps.executeQuery();
            Budget budget;
            DateFormat dateFormat = new SimpleDateFormat("MM-YYYY");
            
            while(rs.next()) {
                
                budget = new Budget(rs.getInt("BudgetID"), rs.getDate("MonthYear"), rs.getString("CategoryName"), rs.getFloat("Budget"), rs.getInt("userid"));
                budgetList.add(budget);
            }
                
            } catch (SQLException ex) {
                Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
             return budgetList;
    }
    
    //Populate the JTable
     public void Show_Budget_In__JTable()
    {
        ArrayList<Budget> list = getBudgetList();
        DefaultTableModel model = (DefaultTableModel)jTable_Budget.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[3];
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getBudgetID();
            row[1] = list.get(i).getCategoryName();
            row[2] = list.get(i).getBudget();
            model.addRow(row);
        }
    
    }
    
     //Show Data in Inputs
      public void ShowItem(int index)
    {
            jTextField_BudgetID.setText(Integer.toString(getBudgetList().get(index).getBudgetID()));
            //**************************************************************************************************
            jComboBox_Category.setSelectedItem(getBudgetList().get(index).getCategoryName());
            jTextField_Budget.setText(Float.toString(getBudgetList().get(index).getBudget()));
        
    }
      
      
    //Show Catgories in Combo Box
    public void Show_Categories_In_ComboBox() {
        PreparedStatement ps;
        String query = "Select CategoryName from category";
        ResultSet rs;
         try {
             ps = MyConnection.getConnection().prepareStatement(query);
             rs = ps.executeQuery();
             while(rs.next()) {
                 jComboBox_Category.addItem(rs.getString("CategoryName"));
             }
             
             
         } catch (SQLException ex) {
             Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }  
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Budget = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_BudgetID = new javax.swing.JTextField();
        jButton_ADD = new javax.swing.JButton();
        jButton_MODIFY = new javax.swing.JButton();
        jButton_DELETE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField_Budget = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton_Category = new javax.swing.JButton();
        jComboBox_Category = new javax.swing.JComboBox<>();
        jButton_Category1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(37, 157, 190));

        jTable_Budget.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BudgetID", "Category", "Budget"
            }
        ));
        jTable_Budget.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_BudgetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Budget);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Category:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("BudgetID:");

        jTextField_BudgetID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_BudgetID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_BudgetIDActionPerformed(evt);
            }
        });

        jButton_ADD.setBackground(new java.awt.Color(255, 222, 89));
        jButton_ADD.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_ADD.setText("Add");
        jButton_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ADDActionPerformed(evt);
            }
        });

        jButton_MODIFY.setBackground(new java.awt.Color(255, 222, 89));
        jButton_MODIFY.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_MODIFY.setText("Modify");
        jButton_MODIFY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_MODIFYActionPerformed(evt);
            }
        });

        jButton_DELETE.setBackground(new java.awt.Color(234, 66, 83));
        jButton_DELETE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_DELETE.setText("Delete");
        jButton_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DELETEActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Budget:");

        jTextField_Budget.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_Budget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_BudgetActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(97, 44, 9));
        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("MANAGE BUDGET");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jButton_Category.setBackground(new java.awt.Color(255, 222, 89));
        jButton_Category.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Category.setText("+");
        jButton_Category.setBorder(null);
        jButton_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CategoryActionPerformed(evt);
            }
        });

        jComboBox_Category.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton_Category1.setBackground(new java.awt.Color(234, 66, 83));
        jButton_Category1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Category1.setText("-");
        jButton_Category1.setBorder(null);
        jButton_Category1.setMaximumSize(new java.awt.Dimension(15, 15));
        jButton_Category1.setMinimumSize(new java.awt.Dimension(15, 15));
        jButton_Category1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Category1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jButton_ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_MODIFY, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_BudgetID)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jComboBox_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton_Category1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_Budget, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_BudgetID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jComboBox_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Category1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Budget, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_MODIFY, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X ");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(currentMonth);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 606, Short.MAX_VALUE)
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabelClose)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClose)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    
    
    
    
    private void jTextField_BudgetIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_BudgetIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_BudgetIDActionPerformed

    private void jTextField_BudgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_BudgetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_BudgetActionPerformed

    private void jButton_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ADDActionPerformed
        if(checkInputs()){
            PreparedStatement ps;
            
            //*******************************************************************************************************************
            /*1*/String cname =  ((String)(jComboBox_Category.getSelectedItem())).toUpperCase();
            /*2*/float budget = Float.parseFloat(jTextField_Budget.getText());
            /*3*/int userid = getUserId(userName);
                 java.util.Date currentDate = new java.util.Date();
                 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            /*4*/String monthYear = sdf.format(currentDate);
                 
            String query = "Insert into budget(MonthYear, CategoryName, budget, userid) values(?, ?, ?, ?)";
            
            
            try {
                
                ps = MyConnection.getConnection().prepareStatement(query);
                
                ps.setString(1, monthYear);
                ps.setString(2, cname);
                ps.setFloat(3, budget);
                ps.setInt(4, userid);
                
                ps.executeUpdate();
                Show_Budget_In__JTable();
                insert_into_spending_table(userid, monthYear, cname);
                 
                JOptionPane.showMessageDialog(null, "Data Inserted");
            } catch (Exception ex) {
                 JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(null, "One Or More Field Are Empty");
        }
       
    }//GEN-LAST:event_jButton_ADDActionPerformed

    private void jButton_MODIFYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_MODIFYActionPerformed
        if(checkInputs() && !jTextField_BudgetID.getText().equals("")){
            PreparedStatement ps;
            String updateQuery = "UPDATE budget SET CategoryName = ?, Budget = ? WHERE BudgetID = ?";
            try {
                ps = MyConnection.getConnection().prepareStatement(updateQuery);
               //********************************************************************************************************************************
                ps.setString(1, ((String)(jComboBox_Category.getSelectedItem())).toUpperCase());
                ps.setFloat(2, Float.parseFloat(jTextField_Budget.getText()));
                ps.setInt(3, Integer.parseInt(jTextField_BudgetID.getText()));
                
                modify_spending_table();
                ps.executeUpdate();
                Show_Budget_In__JTable();
                
                
                JOptionPane.showMessageDialog(null, "Product Updated");
                   
                } catch (SQLException ex) {
                    Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
                }
               
        }else{
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty Or Wrong");
        }
        
    }//GEN-LAST:event_jButton_MODIFYActionPerformed
    
    
    private void jButton_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DELETEActionPerformed
        if(!jTextField_BudgetID.getText().equals("")) {
            
            try {
                PreparedStatement ps;
                String deleteQuery = "DELETE FROM budget WHERE BudgetID = ?";
                
                ps = MyConnection.getConnection().prepareStatement(deleteQuery);
                
                ps.setInt(1,Integer.parseInt(jTextField_BudgetID.getText()));
                
                delete_spending_table();
                ps.executeUpdate();
                Show_Budget_In__JTable();
                
                 JOptionPane.showMessageDialog(null, "Budget Deleted");
            } catch (SQLException ex) {
                Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Budget Not Deleted");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Budget Not Deleted : No Id To Delete");
        }
    }//GEN-LAST:event_jButton_DELETEActionPerformed

    private void jTable_BudgetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_BudgetMouseClicked
        
         int index = jTable_Budget.getSelectedRow();
        ShowItem(index);
        
    }//GEN-LAST:event_jTable_BudgetMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        ManageBudget mb = new ManageBudget();
        mb.setVisible(true);
        mb.pack();
        mb.setLocationRelativeTo(null);
        mb.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
         setLocation(getX() + evt.getX() - mouseX, getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jButton_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CategoryActionPerformed
        AddCategory ac1 = new AddCategory();
        ac1.setVisible(true);
        ac1.pack();
        ac1.setLocationRelativeTo(null);
        ac1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
    }//GEN-LAST:event_jButton_CategoryActionPerformed

    private void jButton_Category1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Category1ActionPerformed
        
        String selectedItem = (String)jComboBox_Category.getSelectedItem();
        PreparedStatement ps;
        String query = "Delete from category where CategoryName = ?";
        ResultSet rs;
         try {
             ps = MyConnection.getConnection().prepareStatement(query);
             ps.setString(1, selectedItem);
             ps.executeUpdate();
             jComboBox_Category.removeItem(selectedItem.toUpperCase());
             Show_Categories_In_ComboBox();
             JOptionPane.showMessageDialog(null, "Category Deleted.");
             
             
         } catch (SQLException ex) {
             Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton_Category1ActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
       
        
    }//GEN-LAST:event_formMousePressed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBudget().setVisible(true);
            }
        });
    }
    
    
    //Check User Inputs
    public boolean checkInputs(){
        if(jTextField_Budget.getText() == null
          ){
            return false;
        }
        else{
            try{
                Float.parseFloat(jTextField_Budget.getText());
                return true;
            }catch(Exception ex)
            {
                return false;
            }
        }
    }
    
    
    //get userid
    public int getUserId(String username){
        PreparedStatement ps;
        ResultSet rs;
        int userid = -1;
        String query = "Select userid from user where username = ?";
        
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, username);
            
            rs = ps.executeQuery();
            if(rs.next()){
            userid = rs.getInt("USERID");
}
            
        } catch (SQLException ex) {
            Logger.getLogger(HOME_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        return userid;
    }
    
    
    //Insert into Spending table
    public void insert_into_spending_table(int userID, String monthYear, String categoryName) {
        PreparedStatement ps;
        int budgetID = getBudgetID(userID, monthYear, categoryName);
        
        String query = "Insert into spending(BudgetID, MonthYear, CategoryName) values(?, ?, ?)";
        
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
            ps.setInt(1, budgetID);
            ps.setString(2, monthYear);
            ps.setString(3, categoryName);
            
            ps.executeUpdate();
            
            
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        
    }
    
    //Modify Into Spending Table
    public void modify_spending_table() {
       
        PreparedStatement ps;
        String updateQuery = "UPDATE spending SET CategoryName = ? where BudgetID = ?";
        try {
            ps = MyConnection.getConnection().prepareStatement(updateQuery);
            //**************************************************************************************************************************************************
            ps.setString(1, ((String)(jComboBox_Category.getSelectedItem())).toUpperCase());
             ps.setInt(2, Integer.parseInt(jTextField_BudgetID.getText()));
            
            ps.executeUpdate();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }
    
    //Delete From Spending Table
    public void delete_spending_table() {
        PreparedStatement ps;
        String deleteQuery = "DELETE FROM spending where BudgetID = ?";
        try {
            ps = MyConnection.getConnection().prepareStatement(deleteQuery);
            
            ps.setInt(1, Integer.parseInt(jTextField_BudgetID.getText()));
            
            ps.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }
    
    
    
    
    //Get BudgetID
    public int getBudgetID(int userID, String monthYear, String categoryName) {
        int budgetID = -1;
        try {
            PreparedStatement ps;
            String query = "Select BudgetID from budget where MonthYear = ? and CategoryName = ? and userid = ?";
            ResultSet rs;
            
            
            
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, monthYear);
            ps.setString(2, categoryName);
            ps.setInt(3, userID);
            
            rs = ps.executeQuery();
            if(rs.next()){
                budgetID = rs.getInt("BudgetID");
                
            }
            
            
            // Variables declaration - do not modify
        } catch (SQLException ex) {
            Logger.getLogger(AddBudget.class.getName()).log(Level.SEVERE, null, ex); 
            
        }
        
        
        return budgetID;
    }    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ADD;
    private javax.swing.JButton jButton_Category;
    private javax.swing.JButton jButton_Category1;
    private javax.swing.JButton jButton_DELETE;
    private javax.swing.JButton jButton_MODIFY;
    public static javax.swing.JComboBox<String> jComboBox_Category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Budget;
    private javax.swing.JTextField jTextField_Budget;
    private javax.swing.JTextField jTextField_BudgetID;
    // End of variables declaration//GEN-END:variables
}
